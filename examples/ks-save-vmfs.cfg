
esxlocation --firstdisk --clearcontents

vmaccepteula
rootpw mypassword
bootloader --location=mbr
# network --bootproto=dhcp --device=vmnic32
auth --enablemd5 --enableshadow

virtualdisk esxconsole --size=8000 --onfirstvmfs

part / --fstype=ext3 --size=2500 --grow --onvirtualdisk=esxconsole
part swap --fstype=swap --size=512 --onvirtualdisk=esxconsole
part /var/log --fstype=ext3 --size=2000 --onvirtualdisk=esxconsole

install cdrom

%pre --interpreter=python

import os
import sys

sys.path.append('/usr/lib/vmware/weasel')
import fsset
import partition

disks = partition.getEligibleDisks()

installDisk = disks[0]

# Find and delete any linux partitions
partedDisk = installDisk.partitions.partedDisk
for part in installDisk.partitions:
    if part.partitionId > 1 and \
          part.fsType and \
          part.fsType.name in ['swap', 'ext2', 'ext3']:
        partedPart = partedDisk.get_partition(part.partitionId)
        partedDisk.delete_partition(partedPart)

partedDisk.commit()

# Shrink the extended partition so we can make a large primary partition for the
# vmfs span.
partedDisk.minimize_extended_partition()
partedDisk.commit()

vmfsType = fsset.vmfs3FileSystem()

# Find some free space and create the new partition.
newPart = None
part = partedDisk.next_partition()
while part:
    if part.type == partition.FREESPACE:
        newPart = partedDisk.partition_new(partition.PRIMARY,
                                           vmfsType.partedFileSystemType,
                                           part.geom.start, part.geom.end)
        newConstraint = installDisk.partedDevice.constraint_any()
        partedDisk.add_partition(newPart, newConstraint)
        break
    part = partedDisk.next_partition(part)

partedDisk.commit()

# Find the original vmfs partition.
installDisk.partitions.scanPartitionsOnDevice()
oldVmfsPart = None
for part in installDisk.partitions:
    if part.fsType and part.fsType.name in ['vmfs3']:
        oldVmfsPart = part

if newPart:
    # Format the new partition.
    newPath = installDisk.getPartitionDevicePath(newPart.num)
    os.system("/usr/sbin/vmkfstools -C vmfs3 -b 1m %s" % newPath)

if newPart and oldVmfsPart:
    # Combine the two partitions.
    oldPath = installDisk.getPartitionDevicePath(oldVmfsPart.partitionId)
    os.system("/usr/sbin/vmkfstools --force -Z %s %s" % (newPath, oldPath))


%post --nochroot

echo "WARNING: ************************************"
echo "WARNING: The default root password is set to:"
echo "WARNING:     mypassword"
echo "WARNING: Please change it after rebooting."
echo "WARNING: ************************************"
